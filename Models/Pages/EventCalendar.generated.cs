//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Xperience;

[assembly: RegisterDocumentType(EventCalendar.CLASS_NAME, typeof(EventCalendar))]

namespace CMS.DocumentEngine.Types.Xperience
{
	/// <summary>
	/// Represents a content item of type EventCalendar.
	/// </summary>
	public partial class EventCalendar : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Xperience.EventCalendar";


		/// <summary>
		/// The instance of the class that provides extended API for working with EventCalendar fields.
		/// </summary>
		private readonly EventCalendarFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// EventCalendarID.
		/// </summary>
		[DatabaseIDField]
		public int EventCalendarID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("EventCalendarID"), 0);
			}
			set
			{
				SetValue("EventCalendarID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string EventCalendarName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EventCalendarName"), @"");
			}
			set
			{
				SetValue("EventCalendarName", value);
			}
		}


		/// <summary>
		/// Text color.
		/// </summary>
		[DatabaseField]
		public string EventCalendarColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EventCalendarColor"), @"#000");
			}
			set
			{
				SetValue("EventCalendarColor", value);
			}
		}


		/// <summary>
		/// Background color.
		/// </summary>
		[DatabaseField]
		public string EventCalendarBgColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EventCalendarBgColor"), @"");
			}
			set
			{
				SetValue("EventCalendarBgColor", value);
			}
		}


		/// <summary>
		/// Bullet color.
		/// </summary>
		[DatabaseField]
		public string EventCalendarBorderColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EventCalendarBorderColor"), @"");
			}
			set
			{
				SetValue("EventCalendarBorderColor", value);
			}
		}


		/// <summary>
		/// Show event capacity and attendee count.
		/// </summary>
		[DatabaseField]
		public bool EventCalendarShowAttendeeCount
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EventCalendarShowAttendeeCount"), true);
			}
			set
			{
				SetValue("EventCalendarShowAttendeeCount", value);
			}
		}


		/// <summary>
		/// Show event attendee names.
		/// </summary>
		[DatabaseField]
		public bool EventCalendarShowAttendeeNames
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EventCalendarShowAttendeeNames"), false);
			}
			set
			{
				SetValue("EventCalendarShowAttendeeNames", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with EventCalendar fields.
		/// </summary>
		[RegisterProperty]
		public EventCalendarFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with EventCalendar fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class EventCalendarFields : AbstractHierarchicalObject<EventCalendarFields>
		{
			/// <summary>
			/// The content item of type EventCalendar that is a target of the extended API.
			/// </summary>
			private readonly EventCalendar mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="EventCalendarFields" /> class with the specified content item of type EventCalendar.
			/// </summary>
			/// <param name="instance">The content item of type EventCalendar that is a target of the extended API.</param>
			public EventCalendarFields(EventCalendar instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// EventCalendarID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.EventCalendarID;
				}
				set
				{
					mInstance.EventCalendarID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.EventCalendarName;
				}
				set
				{
					mInstance.EventCalendarName = value;
				}
			}


			/// <summary>
			/// Text color.
			/// </summary>
			public string Color
			{
				get
				{
					return mInstance.EventCalendarColor;
				}
				set
				{
					mInstance.EventCalendarColor = value;
				}
			}


			/// <summary>
			/// Background color.
			/// </summary>
			public string BgColor
			{
				get
				{
					return mInstance.EventCalendarBgColor;
				}
				set
				{
					mInstance.EventCalendarBgColor = value;
				}
			}


			/// <summary>
			/// Bullet color.
			/// </summary>
			public string BorderColor
			{
				get
				{
					return mInstance.EventCalendarBorderColor;
				}
				set
				{
					mInstance.EventCalendarBorderColor = value;
				}
			}


			/// <summary>
			/// Show event capacity and attendee count.
			/// </summary>
			public bool ShowAttendeeCount
			{
				get
				{
					return mInstance.EventCalendarShowAttendeeCount;
				}
				set
				{
					mInstance.EventCalendarShowAttendeeCount = value;
				}
			}


			/// <summary>
			/// Show event attendee names.
			/// </summary>
			public bool ShowAttendeeNames
			{
				get
				{
					return mInstance.EventCalendarShowAttendeeNames;
				}
				set
				{
					mInstance.EventCalendarShowAttendeeNames = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="EventCalendar" /> class.
		/// </summary>
		public EventCalendar() : base(CLASS_NAME)
		{
			mFields = new EventCalendarFields(this);
		}

		#endregion
	}
}